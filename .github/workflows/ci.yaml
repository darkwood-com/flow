name: Continuous Integration

on:
  push:
    branches:
      - 1.x
  pull_request:

jobs:
#  infection:
#    name: Run Infection
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        php: [ '8.3' ]
#    steps:
#      - name: Init repository
#        uses: actions/checkout@v3
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: xsl, openswoole
#          tools: composer
#
#      - name: Install dependencies
#        run: |
#          composer install
#          composer install -d tools/infection
#
#      - name: Run Infection
#        run: (cd tools && infection/vendor/bin/infection --configuration=infection/infection.json)

#  phan:
#    name: Run Phan
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        php: [ '8.3' ]
#    steps:
#      - name: Init repository
#        uses: actions/checkout@v3
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: xsl, openswoole, ast
#          tools: composer
#
#      - name: Install dependencies
#        run: |
#          composer install
#          composer install -d tools/phan
#
#      - name: Run Phan
#        run: (cd tools && phan/vendor/bin/phan --config-file phan/phan.php)

  php-cs-fixer:
    name: Check and fix coding styles using PHP CS Fixer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.3' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: xsl, openswoole
          tools: composer
          coverage: none # disable XDebug for tests

      - name: Install dependencies
        run: |
          composer install
          composer install -d tools/php-cs-fixer

      - name: Check and fix coding styles using PHP CS Fixer
        run: (cd tools && php-cs-fixer/vendor/bin/php-cs-fixer fix --config php-cs-fixer/.php-cs-fixer.php  --diff --dry-run)

#  phpcbf:
#    name: Clean code with PHP Code Beautifier and Fixer
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        php: [ '8.3' ]
#    steps:
#      - name: Init repository
#        uses: actions/checkout@v3
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: xsl, openswoole, ast
#          tools: composer
#
#      - name: Install dependencies
#        run: |
#          composer install
#          composer install -d tools/phpcbf
#
#      - name: Clean code with PHP Code Beautifier and Fixer
#        run: (cd tools && phpcbf/vendor/bin/phpcbf --standard=phpcbf/phpcs.xml)

#  phpcs:
#    name: Run PHP Code Sniffer
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        php: [ '8.3' ]
#    steps:
#      - name: Init repository
#        uses: actions/checkout@v3
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: xsl, openswoole, ast
#          tools: composer
#
#      - name: Install dependencies
#        run: |
#          composer install
#          composer install -d tools/phpcs
#
#      - name: Run PHP Code Sniffer
#        run: (cd tools && phpcs/vendor/bin/phpcs --standard=phpcs/phpcs.xml)

#  phpmd:
#    name: Run PHP Mess Detector
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        php: [ '8.3' ]
#    steps:
#      - name: Init repository
#        uses: actions/checkout@v3
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: xsl, openswoole
#          tools: composer
#
#      - name: Install dependencies
#        run: |
#          composer install
#          composer install -d tools/phpmd
#
#      - name: Run PHP Mess Detector
#        run: (cd tools && phpmd/vendor/bin/phpmd ../examples/,../src/,../tests/ text phpmd/phpmd.xml)

  phpstan:
    name: Execute PHPStan analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.3' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: xsl, openswoole
          tools: composer
          coverage: none # disable XDebug for tests

      - name: 'Install dependencies'
        run: |
          composer install
          composer install -d tools/phpstan

      - name: Execute PHPStan analysis
        run: (cd tools && phpstan/vendor/bin/phpstan --configuration=phpstan/phpstan.neon)

  phpunit:
    name: Launch PHPUnit test suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.3' ]
    steps:
      - name: Init repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: xsl, openswoole
          tools: composer
          coverage: none # disable XDebug for tests

      - name: Install dependencies
        run: |
          composer install
          composer install -d tools/phpunit

      - name: Launch PHPUnit test suite
        run: (cd tools && phpunit/vendor/bin/phpunit --configuration phpunit/phpunit.xml)

#  psalm:
#    name: Run PHP Mess Detector
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        php: [ '8.3' ]
#    steps:
#      - name: Init repository
#        uses: actions/checkout@v3
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: xsl, openswoole
#          tools: composer
#
#      - name: Install dependencies
#        run: |
#          composer install
#          composer install -d tools/psalm
#
#      - name: Run PHP Mess Detector
#        run: (cd tools && psalm/vendor/bin/psalm --no-cache --config psalm/psalm.xml)
