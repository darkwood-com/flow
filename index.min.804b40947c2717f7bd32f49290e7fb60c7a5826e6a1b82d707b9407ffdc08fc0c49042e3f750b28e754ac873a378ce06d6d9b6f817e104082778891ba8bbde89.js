var suggestions=document.getElementById('suggestions'),search=document.getElementById('search');search!==null&&document.addEventListener('keydown',inputFocus);function inputFocus(a){a.ctrlKey&&a.key==='/'&&(a.preventDefault(),search.focus()),a.key==='Escape'&&(search.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement),f=suggestions.classList.contains('d-none');let c=0;b.keyCode===38&&!f?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&!f&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var a=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});a.add({id:0,href:"https://darkwood-fr.github.io/flow/docs/getting-started/introduction/",title:"Introduction",description:"Introduction.",content:'\u003ch1 id="flow"\u003eFlow\u003c/h1\u003e\n\u003ch2 id="why-"\u003eWhy ?\u003c/h2\u003e\n\u003cp\u003eFlow concept aims to solve\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAdopt asynchronous as native implementation\u003c/li\u003e\n\u003cli\u003eBuild your code with functional programming and monoids\u003c/li\u003e\n\u003cli\u003eAssemble your code visually\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="installation"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003ePHP 8.1 is the minimal version to use \u003cem\u003eFlow\u003c/em\u003e is 8.1\u003cbr\u003e\nThe recommended way to install it through \u003ca href="http://getcomposer.org/"\u003eComposer\u003c/a\u003e and execute\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecomposer require darkwood/flow\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="usage"\u003eUsage\u003c/h2\u003e\n\u003cp\u003eA working script is available in the bundled \u003ccode\u003eexamples\u003c/code\u003e directory\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRun Flow : \u003ccode\u003ephp examples/flow.php\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="documentation"\u003eDocumentation\u003c/h2\u003e\n\u003cp\u003e\u003ca href="https://darkwood-fr.github.io/flow"\u003ehttps://darkwood-fr.github.io/flow\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="license"\u003eLicense\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eFlow\u003c/em\u003e is released under the MIT License.\u003c/p\u003e\n'}).add({id:1,href:"https://darkwood-fr.github.io/flow/docs/getting-started/flow/",title:"Flow",description:"Flow.",content:'\u003ch1 id="flow"\u003eFlow\u003c/h1\u003e\n\u003ch2 id="flow-implementation"\u003eFlow implementation\u003c/h2\u003e\n\u003cp\u003eAccording to \u003ca href="https://en.wikipedia.org/wiki/Monad_(functional_programming)"\u003eWikipedia\u003c/a\u003e, Monads is an abstract generic structure that get its usage in function composition. Monads can shortly considered as \u003ccode\u003eProgramming with effects\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eWe consider \u003ccode\u003eFlows\u003c/code\u003e as a set of elements in our ensemble as a Monad implementation :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBy using \u003ccode\u003ejob\u003c/code\u003e as basic function type within the \u003ccode\u003eFlow\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eBy using \u003ccode\u003efn\u003c/code\u003e as a binary operation, \u003ccode\u003eFlow\u003c/code\u003e can be composed together with others \u003ccode\u003eFlow\u003c/code\u003e element.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eA \u003ccode\u003eFlow\u003c/code\u003e can process one or many \u003ccode\u003eIps\u003c/code\u003e which has its application for asynchronous programming when mixing with \u003ca href="drivers.md"\u003e\u003ccode\u003eDrivers\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="flow-1"\u003eFlow\u003c/h2\u003e\n\u003cp\u003eThis is the standard Flow implementation that support asynchronous \u003ccode\u003eIp\u003c/code\u003e processing.\u003c/p\u003e\n\u003ch2 id="flowdecorator"\u003eFlowDecorator\u003c/h2\u003e\n\u003cp\u003eThis is useful for implementing the \u003ca href="https://en.wikipedia.org/wiki/Decorator_pattern"\u003edecorator design pattern\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="transportflow"\u003eTransportFlow\u003c/h2\u003e\n\u003cp\u003eTransportFlow will interact with Flow with Producer and Sender.\u003c/p\u003e\n\u003ch2 id="yflow"\u003eYFlow\u003c/h2\u003e\n\u003cp\u003eYFlow use YCombinator to provide recursion.\u003c/p\u003e\n\u003ch2 id="make-your-own-flow"\u003eMake your own Flow\u003c/h2\u003e\n\u003cp\u003eYou can make your custom Flow by implementing \u003ccode\u003eFlow\\FlowInterface\u003c/code\u003e.\u003c/p\u003e\n'}).add({id:2,href:"https://darkwood-fr.github.io/flow/docs/getting-started/driver/",title:"Driver",description:"Driver.",content:'\u003ch1 id="driver"\u003eDriver\u003c/h1\u003e\n\u003cp\u003eFlow embark multiple drivers.\u003c/p\u003e\n\u003ch2 id="coroutine"\u003eCoroutine\u003c/h2\u003e\n\u003cp\u003eDrivers are useful to essentially provide asynchronous programming by using \u003ca href="https://en.wikipedia.org/wiki/Coroutine"\u003ecoroutines\u003c/a\u003e.\u003cbr\u003e\nThus, this can be implemented in severals ways in most popular programming languages.\u003c/p\u003e\n\u003cp\u003eCoroutine are very similar to \u003ca href="https://en.wikipedia.org/wiki/Thread_(computing)"\u003ethreads\u003c/a\u003e and provide concurrency but not parallelism.\u003cbr\u003e\nAdvantage of using coroutine :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethis can be a preferred usage to thread for \u003ca href="https://en.wikipedia.org/wiki/Real-time_computing#Hard"\u003ehard-realtime\u003c/a\u003e context.\u003c/li\u003e\n\u003cli\u003ethere is no need for synchronisation primitives such as mutexes, semaphore.\u003c/li\u003e\n\u003cli\u003eit reduces the usage of system lock for sharing resources.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="amp-driver"\u003eAmp Driver\u003c/h2\u003e\n\u003cp\u003eTo use Amp Driver, you have to require the library with composer\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecomposer require amphp/amp\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMore documentation can be found \u003ca href="https://amphp.org"\u003ehttps://amphp.org\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="swoole-driver"\u003eSwoole Driver\u003c/h2\u003e\n\u003cp\u003eTo use Swoole Driver, you have to add the extension with your current running PHP\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epecl install swoole\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMore documentation can be found \u003ca href="https://www.swoole.co.uk"\u003ehttps://www.swoole.co.uk\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="reactphp-driver"\u003eReactPHP Driver\u003c/h2\u003e\n\u003cp\u003eTo use ReactPHP Driver, you have to require the library with composer\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecomposer require react/event-loop\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMore documentation can be found \u003ca href="https://reactphp.org"\u003ehttps://reactphp.org\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="make-your-custom-driver"\u003eMake your custom driver\u003c/h2\u003e\n\u003cp\u003eYou can make your custom driver by implementing \u003ccode\u003eFlow\\DriverInterface\u003c/code\u003e\u003c/p\u003e\n'}).add({id:3,href:"https://darkwood-fr.github.io/flow/docs/getting-started/ip-strategy/",title:"Ip Strategy",description:"Ip Strategy.",content:'\u003ch1 id="ip-strategy"\u003eIp Strategy\u003c/h1\u003e\n\u003cp\u003eWhen processing Flow with one or multiple Ips, you can choose a strategy that will sequence the order of processing Ip.\u003c/p\u003e\n\u003ch2 id="linearipstrategy"\u003eLinearIpStrategy\u003c/h2\u003e\n\u003cp\u003eThis process Ip by order : first in, first out.\u003c/p\u003e\n\u003ch2 id="stackipstrategy"\u003eStackIpStrategy\u003c/h2\u003e\n\u003cp\u003eThis process Ip as a stack order : push ip to the top of the stack, then order ip retrieval from the top stack to bottom.\u003c/p\u003e\n\u003ch2 id="maxipstrategy"\u003eMaxIpStrategy\u003c/h2\u003e\n\u003cp\u003eThis process Ip as soon less Ip are currently process than the current max.\u003cbr\u003e\nYou can embed it by a custom strategy with is \u003ccode\u003eLinearIpStrategy\u003c/code\u003e by default.\u003c/p\u003e\n\u003ch2 id="make-your-ip-strategy"\u003eMake your Ip Strategy\u003c/h2\u003e\n\u003cp\u003eYou can make your custom Ip strategy by implementing \u003ccode\u003eFlow\\IpStrategyInterface\u003c/code\u003e\u003c/p\u003e\n'}).add({id:4,href:"https://darkwood-fr.github.io/flow/docs/getting-started/ressources/",title:"Ressources",description:"Ressources.",content:'\u003ch1 id="more-information-about-the-code"\u003eMore information about the code\u003c/h1\u003e\n\u003cp\u003eArticle of this project : \u003ca href="https://blog.darkwood.fr/article/php-railway-flow-based-programming"\u003ehttps://blog.darkwood.fr/article/php-railway-flow-based-programming\u003c/a\u003e\u003cbr\u003e\nSlides of this project : \u003ca href="https://speakerdeck.com/matyo91/php-railway-flow-based-programming"\u003ehttps://speakerdeck.com/matyo91/php-railway-flow-based-programming\u003c/a\u003e\u003cbr\u003e\nVideo of this project : \u003ca href="https://www.youtube.com/watch?v=mxxdhGsaIjY"\u003ehttps://www.youtube.com/watch?v=mxxdhGsaIjY\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="railway-flow-based-programming-with-elixir-from-anton-mishchukhttpstwittercomanton_mishchuk"\u003eRailway Flow Based Programming with Elixir from \u003ca href="https://twitter.com/anton_mishchuk"\u003eAnton Mishchuk\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePresentation in an article : \u003ca href="https://anton-mishchuk.medium.com/railway-flow-based-programming-with-flowex-ef04fd338e41"\u003ehttps://anton-mishchuk.medium.com/railway-flow-based-programming-with-flowex-ef04fd338e41\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePresentation with video : \u003ca href="https://www.youtube.com/watch?v=TLvbP8bt2HA"\u003ehttps://www.youtube.com/watch?v=TLvbP8bt2HA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAdvanced implementation with multiple programming languages : \u003ca href="https://medium.com/@anton.mishchuk/multi-language-flowex-components-fdda11d34744"\u003ehttps://medium.com/@anton.mishchuk/multi-language-flowex-components-fdda11d34744\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePresentation in an article : \u003ca href="https://fr.slideshare.net/AntonMishchuk/multilanguage-fbp-with-flowex"\u003ehttps://fr.slideshare.net/AntonMishchuk/multilanguage-fbp-with-flowex\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eImplementation in Elixir : \u003ca href="https://github.com/antonmi/flowex"\u003ehttps://github.com/antonmi/flowex\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eImplementation in Elixir with multiple programming languages : \u003ca href="https://github.com/antonmi/multi_flowex"\u003ehttps://github.com/antonmi/multi_flowex\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="flow-based-programming-from-j-paul-rodker-morrisonhttpsjpaulmgithubio"\u003eFlow Based Programming from \u003ca href="https://jpaulm.github.io"\u003eJ. Paul Rodker Morrison\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003econcept : \u003ca href="https://jpaulm.github.io/fbp"\u003ehttps://jpaulm.github.io/fbp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eImplementation in javascript from \u003ca href="https://github.com/bergie"\u003eHenri Bergius\u003c/a\u003e : \u003ca href="https://noflojs.org"\u003ehttps://noflojs.org\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eImplementation in PHP from \u003ca href="https://github.com/bergie"\u003eHenri Bergius\u003c/a\u003e : \u003ca href="https://github.com/phpflo/phpflo"\u003ehttps://github.com/phpflo/phpflo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="railway-oriented-programming"\u003eRailway Oriented Programming\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ePresentation from \u003ca href="https://twitter.com/rrramiro"\u003eSarmiento Calle\u003c/a\u003e : \u003ca href="https://www.youtube.com/watch?v=RNTo7Y2wMyI"\u003ehttps://www.youtube.com/watch?v=RNTo7Y2wMyI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePresentation from \u003ca href="https://fr.slideshare.net/scottwlaschin"\u003eScott Wlaschin\u003c/a\u003e : \u003ca href="https://fr.slideshare.net/ScottWlaschin/railway-oriented-programming"\u003ehttps://fr.slideshare.net/ScottWlaschin/railway-oriented-programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eRailway Oriented Programming: C# Edition - Tama Waddell : \u003ca href="https://www.youtube.com/watch?v=45yk2nuRjj8"\u003ehttps://www.youtube.com/watch?v=45yk2nuRjj8\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eImplementation in PHP from \u003ca href="https://github.com/turanct"\u003eTuranct\u003c/a\u003e : \u003ca href="https://github.com/turanct/railway"\u003ehttps://github.com/turanct/railway\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eImplementation in PHP from \u003ca href="https://github.com/monsieurluge"\u003eMonsieur Luge\u003c/a\u003e : \u003ca href="https://github.com/monsieurluge/result"\u003ehttps://github.com/monsieurluge/result\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="coroutines-in-php"\u003eCoroutines in PHP\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://github.com/nikic"\u003eNikita Popov\u003c/a\u003e talk about Coroutines in PHP : \u003ca href="https://nikic.github.io/2012/12/22/Cooperative-multitasking-using-coroutines-in-PHP.html"\u003ehttps://nikic.github.io/2012/12/22/Cooperative-multitasking-using-coroutines-in-PHP.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e100% Asynchrone - 0% Callback en PHP - \u003ca href="https://jolicode.com/equipe/joel-wurtz"\u003eJoel Wurtz\u003c/a\u003e - PHP Tour Montpellier 2018 : \u003ca href="https://www.youtube.com/watch?v=g1UgU5KMyMA"\u003ehttps://www.youtube.com/watch?v=g1UgU5KMyMA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGénérateurs et Programmation Asynchrone: Mode d’emploi - \u003ca href="https://twitter.com/b_viguier"\u003eBenoit Viguier\u003c/a\u003e - Forum PHP 2018 : \u003ca href="https://www.youtube.com/watch?v=7TvIIt4c8uY"\u003ehttps://www.youtube.com/watch?v=7TvIIt4c8uY\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eEn route vers le multi-tâche ! - Julien Bianchi - PHP Tour 2016 \u003ca href="https://www.youtube.com/watch?v=FOeGfSbKkuY"\u003ehttps://www.youtube.com/watch?v=FOeGfSbKkuY\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDifferences between Multiprocessing, Multithreading and Coroutines execution in PHP : \u003ca href="https://divinglaravel.com/asynchronous-php"\u003ehttps://divinglaravel.com/asynchronous-php\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="monads-and-php"\u003eMonads and PHP\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat is a monad from \u003ca href="https://twitter.com/seanski44"\u003eSean Riley\u003c/a\u003e : \u003ca href="https://www.youtube.com/watch?v=t1e8gqXLbsU"\u003ehttps://www.youtube.com/watch?v=t1e8gqXLbsU\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eWhy monads are useful : \u003ca href="https://jameswestby.net/tech/why-monads-are-useful.html"\u003ehttps://jameswestby.net/tech/why-monads-are-useful.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePromise is neither a Functor nor an Applicative nor a Monad \u003ca href="https://stackoverflow.com/questions/45712106/why-are-promises-monads"\u003ehttps://stackoverflow.com/questions/45712106/why-are-promises-monads\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMonads and Monoids : \u003ca href="https://bartoszmilewski.com/2017/09/06/monads-monoids-and-categories"\u003ehttps://bartoszmilewski.com/2017/09/06/monads-monoids-and-categories\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGo mad for monads : \u003ca href="https://www.youtube.com/watch?v=F5fUgXFSH0Q"\u003ehttps://www.youtube.com/watch?v=F5fUgXFSH0Q\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFunctional PHP : \u003ca href="https://www.youtube.com/watch?v=M3_xnTK6-pA"\u003ehttps://www.youtube.com/watch?v=M3_xnTK6-pA\u003c/a\u003e, \u003ca href="https://twitter.com/Crell"\u003eCrell\u003c/a\u003e Functional utilities : \u003ca href="https://github.com/Crell/fp"\u003ehttps://github.com/Crell/fp\u003c/a\u003e and the very updated version of the talk, now as a book: \u003ca href="https://leanpub.com/thinking-functionally-in-php/"\u003ehttps://leanpub.com/thinking-functionally-in-php/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDouglas Crockford: Monads and Gonads : \u003ca href="https://www.youtube.com/watch?v=dkZFtimgAcM"\u003ehttps://www.youtube.com/watch?v=dkZFtimgAcM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMonoids view as Matematical theory for Monads : \u003ca href="https://en.wikipedia.org/wiki/Monoid"\u003ehttps://en.wikipedia.org/wiki/Monoid\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eLamphpda, PHP Lambda translation from Haskel : \u003ca href="https://github.com/marcosh/lamphpda"\u003ehttps://github.com/marcosh/lamphpda\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eErrors and monads in PHP by \u003ca href="https://twitter.com/Baptouuuu"\u003eBaptiste LANGLADE\u003c/a\u003e: video \u003ca href="https://www.youtube.com/watch?v=YfoLM0vWALM"\u003ehttps://www.youtube.com/watch?v=YfoLM0vWALM\u003c/a\u003e, Github : \u003ca href="https://github.com/Innmind/Immutable"\u003ehttps://github.com/Innmind/Immutable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eFunctional : \u003ca href="https://github.com/whsv26/functional"\u003ehttps://github.com/whsv26/functional\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMonad PHP : \u003ca href="https://github.com/ircmaxell/monad-php"\u003ehttps://github.com/ircmaxell/monad-php\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003ePHP-Option : \u003ca href="https://github.com/schmittjoh/php-option"\u003ehttps://github.com/schmittjoh/php-option\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eResult-Type : \u003ca href="https://github.com/GrahamCampbell/Result-Type"\u003ehttps://github.com/GrahamCampbell/Result-Type\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eMonad PHP \u003ca href="https://github.com/ircmaxell/monad-php"\u003ehttps://github.com/ircmaxell/monad-php\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="y-combinator-and-php"\u003eY-Combinator and PHP\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="http://en.wikipedia.org/wiki/Lambda_calculus"\u003eLambda Calculus - Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eLambda calculus language explanation : \u003ca href="https://tgdwyer.github.io/lambdacalculus"\u003ehttps://tgdwyer.github.io/lambdacalculus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCombinator : \u003ca href="https://github.com/loophp/combinator"\u003ehttps://github.com/loophp/combinator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eLambda-php : \u003ca href="https://github.com/igorw/lambda-php"\u003ehttps://github.com/igorw/lambda-php\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="messaging-approach-with-east-oriented-code-from-frédéric-hardyhttpstwittercommageekguy"\u003eMessaging approach with East oriented code from \u003ca href="https://twitter.com/mageekguy"\u003eFrédéric Hardy\u003c/a\u003e\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eArticle : \u003ca href="http://blog.est.voyage/phpTour2015"\u003ehttp://blog.est.voyage/phpTour2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eSource code : \u003ca href="https://github.com/estvoyage/phpTour2015"\u003ehttps://github.com/estvoyage/phpTour2015\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n'}).add({id:5,href:"https://darkwood-fr.github.io/flow/docs/getting-started/changelog/",title:"Changelog",description:"Changelog.",content:'\u003ch3 id="111"\u003e1.1.1\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRename entire project from \u003ccode\u003eRailway FBP\u003c/code\u003e to \u003ccode\u003eFlow\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eBundle \u003ccode\u003eFlow\u003c/code\u003e to PHP monorepository\u003c/li\u003e\n\u003cli\u003eMerge from \u003ccode\u003epackages/symfony\u003c/code\u003e to \u003ccode\u003epackages/php\u003c/code\u003e and make Flow \u003ca href="https://symfony.com"\u003eSymfony\u003c/a\u003e friendly\u003c/li\u003e\n\u003cli\u003eNew DX interface \u003ccode\u003eFlow\\FlowInterface\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eError managment is now integrated to Flow\u003c/li\u003e\n\u003cli\u003eRemove context associated with processing IP\u003c/li\u003e\n\u003cli\u003eDeprecate \u003ccode\u003eFlow\\Flow\\SequenceFlow\u003c/code\u003e in favor for \u003ccode\u003eFlow\\Flow\\Flow\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eDeprecate \u003ccode\u003eFlow\\Flow\\ErrorFlow\u003c/code\u003e in favor for \u003ccode\u003eFlow\\Flow\\Flow\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eUpdate \u003ccode\u003eFlow\\Flow\\YFlow\u003c/code\u003e and make it plain native\u003c/li\u003e\n\u003cli\u003eUpdate \u003ccode\u003eFlow\\IP\u003c/code\u003e that use readonly object\u003c/li\u003e\n\u003cli\u003eNew Flow logo\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="110"\u003e1.1.0\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRelease MIT License\u003c/li\u003e\n\u003cli\u003eUpdate dependencies to PHP 8.1\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="109"\u003e1.0.9\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Flow\\YFlow\u003c/code\u003e that allows introduce recursivity into Flow language approach\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="108"\u003e1.0.8\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd code of conduct\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="107"\u003e1.0.7\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDefine Monads\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="106"\u003e1.0.6\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\TransportFlow\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eFlow can process multiple jobs in parallel\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="105"\u003e1.0.5\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd Symfony integration\u003c/li\u003e\n\u003cli\u003eDefine monads\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="104"\u003e1.0.4\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRefactor structure\u003c/li\u003e\n\u003cli\u003eDecouple integration\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="103"\u003e1.0.3\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\IpStrategy\u003c/code\u003e add  several Ip strategy for data processing\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="102"\u003e1.0.2\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Driver\\DriverInterface\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Driver\\AmpDriver\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Driver\\ReactDriver\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Driver\\SwooleDriver\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id="101"\u003e1.0.1\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Producer\\CollectionConsumer\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Producer\\CollectionProducer\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eAdd \u003ccode\u003eFlow\\Transport\\CollectionTransport\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id="100"\u003e1.0.0\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eInitial release : Flow, Supervisor, Client\u003c/li\u003e\n\u003c/ul\u003e\n'}).add({id:6,href:"https://darkwood-fr.github.io/flow/docs/getting-started/license/",title:"License",description:"License.",content:'\u003cp\u003eThe MIT License (MIT)\u003c/p\u003e\n\u003cp\u003eCopyright (c) 2022 Mathieu Ledru \u003ca href="mailto:mathieu@darkwood.fr"\u003emathieu@darkwood.fr\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003ePermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \u0026ldquo;Software\u0026rdquo;), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\u003c/p\u003e\n\u003cp\u003eThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\u003c/p\u003e\n\u003cp\u003eTHE SOFTWARE IS PROVIDED \u0026ldquo;AS IS\u0026rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\u003c/p\u003e\n'}).add({id:7,href:"https://darkwood-fr.github.io/flow/docs/integrations/php/",title:"PHP Integration",description:"This provide integration in PHP.",content:'\u003ch1 id="php-integration"\u003ePHP Integration\u003c/h1\u003e\n\u003cp\u003eThis provide integration in PHP\u003c/p\u003e\n\u003ch2 id="installation"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eThe recommended way to install it through \u003ca href="http://getcomposer.org/"\u003eComposer\u003c/a\u003e and execute\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecomposer require darkwood/flow\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="usage"\u003eUsage\u003c/h2\u003e\n\u003cp\u003eA working script is available in the bundled \u003ccode\u003eexamples\u003c/code\u003e directory\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRun Flow : \u003ccode\u003ephp examples/flow.php\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eStart Server : \u003ccode\u003ephp examples/server.php\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eStart Client(s) : \u003ccode\u003ephp examples/client.php\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eMessaging part require to install \u003ca href="https://www.docker.com"\u003eDocker\u003c/a\u003e and execute \u003ccode\u003edocker-compose up -d\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id="license"\u003eLicense\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003edarkwood/flow\u003c/em\u003e is released under the MIT License.\u003c/p\u003e\n'}).add({id:8,href:"https://darkwood-fr.github.io/flow/docs/getting-started/",title:"Getting Started",description:"Getting Started Flow.",content:""}).add({id:9,href:"https://darkwood-fr.github.io/flow/docs/integrations/",title:"Integrations",description:"Integrations Flow.",content:""}).add({id:10,href:"https://darkwood-fr.github.io/flow/docs/",title:"Docs",description:"Docs Flow.",content:""}),search.addEventListener('input',b,!0),suggestions.addEventListener('click',c,!0);function b(){var d,e;const c=5;d=this.value,e=a.search(d,{limit:c,enrich:!0}),suggestions.classList.remove('d-none'),suggestions.innerHTML="";const b={};e.forEach(a=>{a.result.forEach(a=>{b[a.doc.href]=a.doc})});for(const d in b){const e=b[d],a=document.createElement('div');if(a.innerHTML='<a href><span></span><span></span></a>',a.querySelector('a').href=d,a.querySelector('span:first-child').textContent=e.title,a.querySelector('span:nth-child(2)').textContent=e.description,suggestions.appendChild(a),suggestions.childElementCount==c)break}}function c(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()